###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        06/May/2017  10:18:17
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpg_common\application\user_app1.c
#    Command line =  
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpg_common\application\user_app1.c
#        -D MPGL1 -D MPG1 -D EIE1 --preprocess=cl
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\Debug\List\
#        -lC
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\Debug\List\
#        -o
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\Debug\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\ -I
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\..\bsp\
#        -I
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\..\drivers\
#        -I
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\..\application\
#        -I
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\
#        -I
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\application\
#        -I
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\cmsis\
#        -I
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\drivers\
#        -On --use_c++_inline --require_prototypes -I "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\Debug\List\user_app1.lst
#    Object file  =  
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\Debug\Obj\user_app1.o
#
###############################################################################

D:\Documents\GitHub\5-5eie\5_course\firmware_mpg_common\application\user_app1.c
      1          /**********************************************************************************************************************
      2          File: user_app1.c                                                                
      3          
      4          ----------------------------------------------------------------------------------------------------------------------
      5          To start a new task using this user_app1 as a template:
      6           1. Copy both user_app1.c and user_app1.h to the Application directory
      7           2. Rename the files yournewtaskname.c and yournewtaskname.h
      8           3. Add yournewtaskname.c and yournewtaskname.h to the Application Include and Source groups in the IAR project
      9           4. Use ctrl-h (make sure "Match Case" is checked) to find and replace all instances of "user_app1" with "yournewtaskname"
     10           5. Use ctrl-h to find and replace all instances of "UserApp1" with "YourNewTaskName"
     11           6. Use ctrl-h to find and replace all instances of "USER_APP1" with "YOUR_NEW_TASK_NAME"
     12           7. Add a call to YourNewTaskNameInitialize() in the init section of main
     13           8. Add a call to YourNewTaskNameRunActiveState() in the Super Loop section of main
     14           9. Update yournewtaskname.h per the instructions at the top of yournewtaskname.h
     15          10. Delete this text (between the dashed lines) and update the Description below to describe your task
     16          ----------------------------------------------------------------------------------------------------------------------
     17          
     18          Description:
     19          This is a user_app1.c file template 
     20          
     21          ------------------------------------------------------------------------------------------------------------------------
     22          API:
     23          
     24          Public functions:
     25          
     26          
     27          Protected System functions:
     28          void UserApp1Initialize(void)
     29          Runs required initialzation for the task.  Should only be called once in main init section.
     30          
     31          void UserApp1RunActiveState(void)
     32          Runs current task state.  Should only be called once in main loop.
     33          
     34          
     35          **********************************************************************************************************************/
     36          
     37          #include "configuration.h"
     38          
     39          /***********************************************************************************************************************
     40          Global variable definitions with scope across entire project.
     41          All Global variable names shall start with "G_UserApp1"
     42          ***********************************************************************************************************************/
     43          /* New variables */

   \                                 In section .bss, align 4
     44          volatile u32 G_u32UserApp1Flags;                       /* Global state flags */
   \                     G_u32UserApp1Flags:
   \   00000000                      DS8 4
     45          
     46          
     47          /*--------------------------------------------------------------------------------------------------------------------*/
     48          /* Existing variables (defined in other files -- should all contain the "extern" keyword) */
     49          extern volatile u32 G_u32SystemFlags;                  /* From main.c */
     50          extern volatile u32 G_u32ApplicationFlags;             /* From main.c */
     51          
     52          extern volatile u32 G_u32SystemTime1ms;                /* From board-specific source file */
     53          extern volatile u32 G_u32SystemTime1s;                 /* From board-specific source file */
     54          
     55          
     56          /***********************************************************************************************************************
     57          Global variable definitions with scope limited to this local application.
     58          Variable names shall start with "UserApp1_" and be declared as static.
     59          ***********************************************************************************************************************/

   \                                 In section .bss, align 4
     60          static fnCode_type UserApp1_StateMachine;            /* The state machine function pointer */
   \                     UserApp1_StateMachine:
   \   00000000                      DS8 4
     61          //static u32 UserApp1_u32Timeout;                      /* Timeout counter used across states */
     62          
     63          
     64          /**********************************************************************************************************************
     65          Function Definitions
     66          **********************************************************************************************************************/
     67          
     68          /*--------------------------------------------------------------------------------------------------------------------*/
     69          /* Public functions                                                                                                   */
     70          /*--------------------------------------------------------------------------------------------------------------------*/
     71          
     72          /*--------------------------------------------------------------------------------------------------------------------*/
     73          /* Protected functions                                                                                                */
     74          /*--------------------------------------------------------------------------------------------------------------------*/
     75          
     76          /*--------------------------------------------------------------------------------------------------------------------
     77          Function: UserApp1Initialize
     78          
     79          Description:
     80          Initializes the State Machine and its variables.
     81          
     82          Requires:
     83            -
     84          
     85          Promises:
     86            - 
     87          */

   \                                 In section .text, align 2, keep-with-next
     88          void UserApp1Initialize(void)
     89          {
     90           
     91            /* If good initialization, set state to Idle */
     92            if( 1 )
     93            {
     94              //UserApp1_StateMachine = UserApp1SM_Idle;
     95               UserApp1_StateMachine =all_led;
   \                     UserApp1Initialize: (+1)
   \   00000000   0x.... 0x....      ADR.W    R0,all_led
   \   00000004   0x....             LDR.N    R1,??DataTable3
   \   00000006   0x6008             STR      R0,[R1, #+0]
     96            }
     97            else
     98            {
     99              /* The task isn't properly initialized, so shut it down and don't run */
    100              UserApp1_StateMachine = UserApp1SM_FailedInit;
    101            }
    102          
    103          } /* end UserApp1Initialize() */
   \   00000008   0x4770             BX       LR               ;; return
    104          
    105            
    106          /*----------------------------------------------------------------------------------------------------------------------
    107          Function UserApp1RunActiveState()
    108          
    109          Description:
    110          Selects and runs one iteration of the current state in the state machine.
    111          All state machines have a TOTAL of 1ms to execute, so on average n state machines
    112          may take 1ms / n to execute.
    113          
    114          Requires:
    115            - State machine function pointer points at current state
    116          
    117          Promises:
    118            - Calls the function to pointed by the state machine function pointer
    119          */

   \                                 In section .text, align 2, keep-with-next
    120          void UserApp1RunActiveState(void)
    121          {
   \                     UserApp1RunActiveState: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    122            UserApp1_StateMachine();
   \   00000002   0x....             LDR.N    R0,??DataTable3
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x4780             BLX      R0
    123          
    124          } /* end UserApp1RunActiveState */
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
    125          
    126          
    127          /*--------------------------------------------------------------------------------------------------------------------*/
    128          /* Private functions                                                                                                  */
    129          /*--------------------------------------------------------------------------------------------------------------------*/
    130          
    131          
    132          /**********************************************************************************************************************
    133          State Machine Function Definitions
    134          **********************************************************************************************************************/
    135          
    136          //

   \                                 In section .text, align 2, keep-with-next
    137          void double_led(void)
    138          {
   \                     double_led: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    139            u8 u8_counter = 0;
   \   00000002   0x2400             MOVS     R4,#+0
    140            if(G_u32SystemTime1ms%500==0)
   \   00000004   0x....             LDR.N    R0,??DataTable3_1
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF44F 0x71FA      MOV      R1,#+500
   \   0000000C   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000010   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD10A             BNE.N    ??double_led_0
    141              for(u8_counter=0;u8_counter<=4;u8_counter++)
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x0004             MOVS     R4,R0
   \                     ??double_led_1: (+1)
   \   0000001C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001E   0x2C05             CMP      R4,#+5
   \   00000020   0xDA05             BGE.N    ??double_led_0
    142              {
    143                LedOn(u8_counter+2);
                             ^
Warning[Pe188]: enumerated type mixed with another type
   \   00000022   0x1CA0             ADDS     R0,R4,#+2
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       LedOn
    144              }
   \   0000002A   0x1C64             ADDS     R4,R4,#+1
   \   0000002C   0xE7F6             B.N      ??double_led_1
    145            if(G_u32SystemTime1ms%2000==0)
   \                     ??double_led_0: (+1)
   \   0000002E   0x....             LDR.N    R0,??DataTable3_1
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0xF44F 0x61FA      MOV      R1,#+2000
   \   00000036   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   0000003A   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000003E   0x2800             CMP      R0,#+0
   \   00000040   0xD10A             BNE.N    ??double_led_2
    146            {
    147               for(u8_counter=0;u8_counter<=7;u8_counter++)
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x0004             MOVS     R4,R0
   \                     ??double_led_3: (+1)
   \   00000046   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000048   0x2C08             CMP      R4,#+8
   \   0000004A   0xDA05             BGE.N    ??double_led_2
    148                 LedOff(u8_counter);
                               ^
Warning[Pe188]: enumerated type mixed with another type
   \   0000004C   0x0020             MOVS     R0,R4
   \   0000004E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000050   0x.... 0x....      BL       LedOff
   \   00000054   0x1C64             ADDS     R4,R4,#+1
   \   00000056   0xE7F6             B.N      ??double_led_3
    149            }
    150            if(G_u32SystemTime1ms%10000==0)
   \                     ??double_led_2: (+1)
   \   00000058   0x....             LDR.N    R0,??DataTable3_1
   \   0000005A   0x6800             LDR      R0,[R0, #+0]
   \   0000005C   0xF242 0x7110      MOVW     R1,#+10000
   \   00000060   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000064   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000068   0x2800             CMP      R0,#+0
   \   0000006A   0xD103             BNE.N    ??double_led_4
    151                UserApp1_StateMachine = all_led;
   \   0000006C   0x.... 0x....      ADR.W    R0,all_led
   \   00000070   0x....             LDR.N    R1,??DataTable3
   \   00000072   0x6008             STR      R0,[R1, #+0]
    152              
    153              
    154          }
   \                     ??double_led_4: (+1)
   \   00000074   0xBD10             POP      {R4,PC}          ;; return
    155          
    156          //all led light.

   \                                 In section .text, align 4, keep-with-next
    157          void all_led(void)
    158          {u8 u8_counter=0;
   \                     all_led: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x2400             MOVS     R4,#+0
    159              if(G_u32SystemTime1ms%1000==0)
   \   00000004   0x....             LDR.N    R0,??DataTable3_1
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF44F 0x717A      MOV      R1,#+1000
   \   0000000C   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000010   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD10A             BNE.N    ??all_led_0
    160              {
    161               for(u8_counter=0;u8_counter<=7;u8_counter++)
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x0004             MOVS     R4,R0
   \                     ??all_led_1: (+1)
   \   0000001C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001E   0x2C08             CMP      R4,#+8
   \   00000020   0xDA05             BGE.N    ??all_led_0
    162               {
    163                 LedOn(u8_counter);
                              ^
Warning[Pe188]: enumerated type mixed with another type
   \   00000022   0x0020             MOVS     R0,R4
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       LedOn
    164                //LedOn(RED);
    165               }
   \   0000002A   0x1C64             ADDS     R4,R4,#+1
   \   0000002C   0xE7F6             B.N      ??all_led_1
    166              }
    167              if(G_u32SystemTime1ms%2000==0)
   \                     ??all_led_0: (+1)
   \   0000002E   0x....             LDR.N    R0,??DataTable3_1
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0xF44F 0x61FA      MOV      R1,#+2000
   \   00000036   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   0000003A   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000003E   0x2800             CMP      R0,#+0
   \   00000040   0xD10A             BNE.N    ??all_led_2
    168              {
    169                for(u8_counter=0;u8_counter<=7;u8_counter++)
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x0004             MOVS     R4,R0
   \                     ??all_led_3: (+1)
   \   00000046   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000048   0x2C08             CMP      R4,#+8
   \   0000004A   0xDA05             BGE.N    ??all_led_2
    170                {
    171                  LedOff(u8_counter);
                                ^
Warning[Pe188]: enumerated type mixed with another type
   \   0000004C   0x0020             MOVS     R0,R4
   \   0000004E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000050   0x.... 0x....      BL       LedOff
    172                }
   \   00000054   0x1C64             ADDS     R4,R4,#+1
   \   00000056   0xE7F6             B.N      ??all_led_3
    173              }
    174              if(G_u32SystemTime1ms%10000==0)//10
   \                     ??all_led_2: (+1)
   \   00000058   0x....             LDR.N    R0,??DataTable3_1
   \   0000005A   0x6800             LDR      R0,[R0, #+0]
   \   0000005C   0xF242 0x7110      MOVW     R1,#+10000
   \   00000060   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000064   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000068   0x2800             CMP      R0,#+0
   \   0000006A   0xD102             BNE.N    ??all_led_4
    175                UserApp1_StateMachine = double_led;
   \   0000006C   0x....             LDR.N    R0,??DataTable3_2
   \   0000006E   0x....             LDR.N    R1,??DataTable3
   \   00000070   0x6008             STR      R0,[R1, #+0]
    176             
    177              
    178                
    179          }
   \                     ??all_led_4: (+1)
   \   00000072   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     UserApp1_StateMachine

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     G_u32SystemTime1ms

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     double_led
    180          ///
    181          /*-------------------------------------------------------------------------------------------------------------------*/
    182          /* Wait for ??? */
    183          static void UserApp1SM_Idle(void)
                             ^
Warning[Pe177]: function "UserApp1SM_Idle" was declared but never referenced
    184          {
    185          
    186          } /* end UserApp1SM_Idle() */
    187              
    188          #if 0
    189          /*-------------------------------------------------------------------------------------------------------------------*/
    190          /* Handle an error */
    191          static void UserApp1SM_Error(void)          
    192          {
    193            
    194          } /* end UserApp1SM_Error() */
    195          #endif
    196          
    197          
    198          /*-------------------------------------------------------------------------------------------------------------------*/
    199          /* State to sit in if init failed */
    200          static void UserApp1SM_FailedInit(void)          
    201          {
    202              
    203          } /* end UserApp1SM_FailedInit() */
    204          
    205          
    206          /*--------------------------------------------------------------------------------------------------------------------*/
    207          /* End of File                                                                                                        */
    208          /*--------------------------------------------------------------------------------------------------------------------*/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   UserApp1Initialize
       8   UserApp1RunActiveState
         8   -- Indirect call
       8   all_led
         8   -> LedOff
         8   -> LedOn
       8   double_led
         8   -> LedOff
         8   -> LedOn


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  G_u32UserApp1Flags
      10  UserApp1Initialize
      10  UserApp1RunActiveState
       4  UserApp1_StateMachine
     116  all_led
     118  double_led

 
   8 bytes in section .bss
 266 bytes in section .text
 
 266 bytes of CODE memory
   8 bytes of DATA memory

Errors: none
Warnings: 5
